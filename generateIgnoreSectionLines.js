const AUTO_GENERATED_COMMENT = '# generated automatically cause dev-dependency';

function isAutoGeneratedLine(line) {
  return line.endsWith(AUTO_GENERATED_COMMENT);
}

function findStartPosition(lines) {
  const index = lines.findIndex(isAutoGeneratedLine);

  if (index === -1) return lines.length;

  return index;
}

function findEndPosition(lines) {
  for(let i = lines.length - 1; i >= 0; i--) {
    if (isAutoGeneratedLine(lines[i])) return i + 1;
  }

  return findStartPosition(lines);
}

function generateLines(dependencies) {
  return dependencies.map(dependencyPath => {
    const path = `${['<PROJECT_ROOT>', ...dependencyPath].join('/node_modules/')}/.*`;

    return `${path} ${AUTO_GENERATED_COMMENT}`;
  })
}

function generateIgnoreSectionLines(dependencies, lines) {
  const startPosition = findStartPosition(lines);
  const endPosition = findEndPosition(lines);

  const before = lines.slice(0, startPosition);
  const autoGenerated = lines.slice(startPosition, endPosition);
  const after = lines.slice(endPosition);

  return [...before, ...autoGenerated.filter(line => !isAutoGeneratedLine(line)), ...generateLines(dependencies), ...after];
}

module.exports.generateIgnoreSectionLines = generateIgnoreSectionLines;